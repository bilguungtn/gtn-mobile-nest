generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

generator dbml {
  provider = "prisma-dbml-generator"
}

/// The underlying table does not contain a valid unique identifier and can therefore currently not be handled by the Prisma Client.
model addresses {
  id          Int       @id @default(autoincrement())
  postal_code String    @db.VarChar(255)
  address     String    @db.VarChar(255)
  profile_id  Int       @db.UnsignedInt
  created_at  DateTime? @db.Timestamp(0)
  updated_at  DateTime? @updatedAt @db.Timestamp(0)
  profiles    profiles  @relation(fields: [profile_id], references: [id], onDelete: Cascade)
}

model call_charges {
  phone_number      String   @db.VarChar(255)
  date              DateTime @db.Date
  amount            Float
  carrier_type_code Int
  created_at        DateTime @default(now()) @db.Timestamp(0)
  id                Int      @id @default(autoincrement()) @db.UnsignedInt

  @@unique([phone_number, date], map: "call_charges_phone_number_date_unique")
}

model cell_phone_company_login_details {
  claim_code        String @unique(map: "cell_phone_company_login_details_claim_code_unique") @db.VarChar(255)
  login_id          String @db.VarChar(255)
  carrier_type_code Int
}

model data_charges {
  id                    Int                     @id @default(autoincrement()) @db.UnsignedInt
  capacity              Float
  price                 Int
  available_count       Int
  data_charge_histories data_charge_histories[]
  plan_groups           plan_groups?            @relation(fields: [plan_groups_id], references: [id])
  plan_groups_id        Int?                    @db.UnsignedInt
}

model data_charge_histories {
  id             Int          @id @default(autoincrement()) @db.UnsignedInt
  profile_id     Int          @db.UnsignedInt
  data_charge_id Int          @db.UnsignedInt
  created_at     DateTime?    @db.Timestamp(0)
  updated_at     DateTime?    @db.Timestamp(0)
  data_charges   data_charges @relation(fields: [data_charge_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "data_charge_histories_data_charge_id_foreign")
  profiles       profiles     @relation(fields: [profile_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "data_charge_histories_profile_id_foreign")

  @@index([data_charge_id], map: "data_charge_histories_data_charge_id_foreign")
  @@index([profile_id], map: "data_charge_histories_profile_id_foreign")
}

model data_traffics {
  phone_number      String   @db.VarChar(255)
  date              DateTime @db.Date
  amount            Float
  carrier_type_code Int
  created_at        DateTime @default(now()) @db.Timestamp(0)
  id                Int      @id @default(autoincrement()) @db.UnsignedInt

  @@unique([phone_number, date], map: "data_traffics_phone_number_date_unique")
}

model data_traffic_charges {
  phone_number      String   @db.VarChar(255)
  date              DateTime @db.Date
  amount            Float
  carrier_type_code Int
  created_at        DateTime @default(now()) @db.Timestamp(0)
  id                Int      @id @default(autoincrement()) @db.UnsignedInt

  @@unique([phone_number, date], map: "data_traffic_charges_phone_number_date_unique")
}

model international_call_charges {
  phone_number      String   @db.VarChar(255)
  date              DateTime @db.Date
  amount            Float
  carrier_type_code Int
  created_at        DateTime @default(now()) @db.Timestamp(0)
  id                Int      @id @default(autoincrement()) @db.UnsignedInt

  @@unique([phone_number, date], map: "international_call_charges_phone_number_date_unique")
}

model profiles {
  id                    Int                     @id @default(autoincrement()) @db.UnsignedInt
  name                  String                  @db.VarChar(255)
  name_kana             String                  @db.VarChar(255)
  birthday              DateTime                @db.Date
  contact_phone_number  String                  @db.VarChar(255)
  cell_phone_number     String                  @db.VarChar(255)
  email                 String                  @unique(map: "profiles_email_unique") @db.VarChar(255)
  created_at            DateTime?               @default(now()) @db.Timestamp(0)
  updated_at            DateTime?               @updatedAt @db.Timestamp(0)
  addresses             addresses[]
  data_charge_histories data_charge_histories[]
  sims                  sims[]
  visas                 visas[]
  user                  users?
}

model failed_jobs {
  id         Int      @id @default(autoincrement()) @db.UnsignedInt
  uuid       String   @unique(map: "failed_jobs_uuid_unique") @db.VarChar(255)
  connection String   @db.Text
  queue      String   @db.Text
  payload    String   @db.LongText
  exception  String   @db.LongText
  failed_at  DateTime @default(now()) @db.Timestamp(0)
}

model gtn_id_tokens {
  id         Int      @id @default(autoincrement()) @db.UnsignedInt
  token      String   @db.Text
  expired_at DateTime @db.DateTime(0)
}

model migrations {
  id        Int    @id @default(autoincrement()) @db.UnsignedInt
  migration String @db.VarChar(255)
  batch     Int
}

/// The underlying table does not contain a valid unique identifier and can therefore currently not be handled by the Prisma Client.
model password_resets {
  email      String    @db.VarChar(255)
  token      String    @db.VarChar(255)
  created_at DateTime? @db.Timestamp(0)

  @@index([email], map: "password_resets_email_index")
  @@ignore
}

model plan_groups {
  id                                                                                      Int                     @id @default(autoincrement()) @db.UnsignedInt
  deadline_day                                                                            String?                 @db.VarChar(255)
  deadline_time                                                                           String?                 @db.VarChar(255)
  available_change_plan                                                                   Boolean                 @default(false)
  current_plan                                                                            Boolean                 @default(false)
  data_charges                                                                            data_charges[]
  plan_groups_relations_plan_groupsToplan_groups_relations_available_change_plan_group_id plan_groups_relations[] @relation("plan_groupsToplan_groups_relations_available_change_plan_group_id")
  plan_groups_relations_plan_groupsToplan_groups_relations_current_plan_group_id          plan_groups_relations[] @relation("plan_groupsToplan_groups_relations_current_plan_group_id")
  plans                                                                                   plans[]
}

/// The underlying table does not contain a valid unique identifier and can therefore currently not be handled by the Prisma Client.
model plan_groups_relations {
  id                                                                            Int         @id @default(autoincrement())
  current_plan_group_id                                                         Int         @db.UnsignedInt
  available_change_plan_group_id                                                Int         @db.UnsignedInt
  plan_groups_plan_groupsToplan_groups_relations_available_change_plan_group_id plan_groups @relation("plan_groupsToplan_groups_relations_available_change_plan_group_id", fields: [available_change_plan_group_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "plan_groups_relations_available_change_plan_group_id_foreign")
  plan_groups_plan_groupsToplan_groups_relations_current_plan_group_id          plan_groups @relation("plan_groupsToplan_groups_relations_current_plan_group_id", fields: [current_plan_group_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "plan_groups_relations_current_plan_group_id_foreign")
}

model plans {
  id                Int         @id @default(autoincrement())
  name              String      @db.VarChar(255)
  happiness_name    String      @db.VarChar(255)
  plan_group_id     Int         @db.UnsignedInt
  capacity          Float?
  carrier_type_code Int         @default(99)
  price             Int?
  plan_groups       plan_groups @relation(fields: [plan_group_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "plans_plan_group_id_foreign")

  @@index([plan_group_id], map: "plans_plan_group_id_foreign")
}

model sims {
  id           Int       @id @default(autoincrement()) @db.UnsignedInt
  sim_number   String    @db.VarChar(255)
  happiness_id String    @unique(map: "sims_happiness_id_unique") @db.VarChar(255)
  canceled_at  DateTime? @db.DateTime(0)
  profile_id   Int       @db.UnsignedInt
  created_at   DateTime? @default(now()) @db.Timestamp(0)
  updated_at   DateTime? @default(now()) @updatedAt @db.Timestamp(0)
  profiles     profiles  @relation(fields: [profile_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "sims_profile_id_foreign")

  @@index([profile_id], map: "sims_profile_id_foreign")
}

model user_identification_admin_tokens {
  id         Int      @id @default(autoincrement()) @db.UnsignedInt
  token      String   @db.Text
  expired_at DateTime @db.DateTime(0)
}

model videos {
  id            Int    @id @default(autoincrement()) @db.UnsignedInt
  video_id      String @db.VarChar(255)
  thumb         String @db.VarChar(255)
  en_title      String @db.VarChar(255)
  id_title      String @db.VarChar(255)
  ja_title      String @db.VarChar(255)
  ko_title      String @db.VarChar(255)
  ne_title      String @db.VarChar(255)
  vi_title      String @db.VarChar(255)
  zh_Hans_title String @db.VarChar(255)
  zh_Hant_title String @db.VarChar(255)
}

model visas {
  id                      Int       @id @default(autoincrement())
  classification_code     Int       @default(999)
  period_of_validity_date DateTime? @db.Date
  profile_id              Int       @db.UnsignedInt
  created_at              DateTime? @default(now()) @db.Timestamp(0)
  updated_at              DateTime? @default(now()) @updatedAt @db.Timestamp(0)
  profiles                profiles  @relation(fields: [profile_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "visas_profile_id_foreign")
}

model users {
  id                Int       @id @default(autoincrement()) @db.UnsignedInt
  name              String    @db.VarChar(255)
  email             String    @unique(map: "users_email_unique") @db.VarChar(255)
  email_verified_at DateTime? @db.Timestamp(0)
  password          String    @db.VarChar(255)
  remember_token    String?   @db.VarChar(100)
  created_at        DateTime? @default(now()) @db.Timestamp(0)
  updated_at        DateTime? @default(now()) @updatedAt @db.Timestamp(0)
  profiles          profiles? @relation(fields: [email], references: [email])
}

model old_user_tbl {
  user_record_id  Int        @id @default(autoincrement()) @db.UnsignedInt
  user_id         String     @unique @db.VarChar(10)
  sim_number      String?    @db.VarChar(11)
  e_mail          String     @db.VarChar(256)
  user_name       String?    @db.VarChar(255)
  user_name_kana  String?    @db.VarChar(255)
  zip_code        String?    @db.Char(7)
  prefectures     String?    @db.VarChar(30)
  address_1       String?    @db.VarChar(255)
  address_2       String?    @db.VarChar(255)
  address_3       String?    @db.VarChar(255)
  address_4       String?    @db.VarChar(255)
  address_5       String?    @db.VarChar(255)
  phone           String?    @db.VarChar(11)
  mobile_phone    String?    @db.VarChar(11)
  billing_id      String?    @db.VarChar(12)
  service_id      String?    @db.VarChar(10)
  service_type    Int?
  plan            String?    @db.VarChar(255)
  plan_status     Int?       @db.UnsignedInt
  signin_dt       DateTime?  @db.Date
  cancel_dt       DateTime?  @db.Date
  use_start_dt    DateTime?  @db.Date
  use_end_dt      DateTime?  @db.Date
  charge_start_dt DateTime?  @db.Date
  charge_end_dt   DateTime?  @db.Date
  bill_tbl        bill_tbl[]
}

model bill_tbl {
  bill_record_id Int           @id @default(autoincrement()) @db.UnsignedInt
  bill_id        String?       @db.VarChar(20)
  target_name    String?       @db.VarChar(200)
  month          Int?
  item_name      String?       @db.VarChar(120)
  price          Int?
  bill_url       String?       @db.VarChar(1000)
  user_id        String?
  user_tbl       old_user_tbl? @relation(fields: [user_id], references: [user_id])
}

// model user_history_tbl {
//     user_history_id Int       @id @default(autoincrement()) @db.UnsignedInt
//     zip_file_name   String?   @db.VarChar(100)
//     data_table_name String?   @db.VarChar(50)
//     target_dt       DateTime? @db.DateTime(0)
//     create_dt       DateTime? @db.DateTime(0)
//     delete_dt       DateTime? @db.DateTime(0)
//     log_message     String?   @db.VarChar(1000)
// }